16th Class (Dt: 12 June 2019)
-----------------------------
Today topic is docker compose.


What is Docker links and it's usefulness?

With docker link we can link the containers.

Let assume out Software Product is using many applications and all the applications are running in different container. So the product will be
fully functional when all the containers are preoperly linked.


For Ex, first conrainer having an app called Wordpress and another container having db called MySQL.

Wordpress (PHP based app)
 
 It runs on tope of web server

WOrdpress is a content management app used to write office apps.



IF Cont A depends on Cont B 

1. First Create cont B for linking with cont A
2. Create container A now


https://hub.docker.com/_/mysql

$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:tag

... where some-mysql is the name you want to assign to your container, my-secret-pw is the password to be set for the MySQL root user and tag is the tag specifying the MySQL version you want. See the list above for relevant tags.


$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mysql:8.0.16

Unable to find image 'mysql:8.0.16' locally
8.0.16: Pulling from library/mysql
fc7181108d40: Pull complete
787a24c80112: Pull complete
a08cb039d3cd: Pull complete
4f7d35eb5394: Pull complete
5aa21f895d95: Pull complete
a742e211b7a2: Pull complete
0163805ad937: Pull complete
87f18876c3ff: Pull complete
78082f25f167: Pull complete
0a510f055c17: Pull complete
312b0999e433: Pull complete
f864cfdc0264: Pull complete
Digest: sha256:415ac63da0ae6725d5aefc9669a1c02f39a00c574fdbc478dfd08db1e97c8f1b
Status: Downloaded newer image for mysql:8.0.16
f834dfcab01aab69a7f6c6d449ce769b957a0ed814db4fac2162d50af5b2daa9
[root@ip-172-31-3-66 ~]#



go to docker hub
search wordpress

Click on the first link
5.2.1-php7.1-apache, 5.2-php7.1-apache, 5-php7.1-apache, php7.1-apache, 5.2.1-php7.1, 5.2-php7.1, 5-php7.1, php7.1 (php7.1/apache/Dockerfile)

It will redirect to github and read that page.

EXPOSE 


httpd
EXPOSE 80

tomcat 
EXPOSE 8080





--link 
Study about docker link.




[root@ip-172-31-3-66 ~]# docker run -d -p 81:80 --link some-mysql wordpress
Unable to find image 'wordpress:latest' locally
latest: Pulling from library/wordpress
fc7181108d40: Already exists
0e65236fc68a: Pull complete
40fde9a4a72e: Pull complete
7565c4cbce22: Pull complete
d11737718e7e: Pull complete
77c761ec3046: Pull complete
0e0238c6dd2e: Pull complete
579369902d60: Pull complete
656e6921784a: Pull complete
4c2bd38ba71f: Pull complete
f5f52d446f17: Pull complete
2cde1b37a507: Pull complete
bc931dd8a5de: Pull complete
134054020449: Pull complete
ad8998d0d240: Pull complete
453f22c36ad3: Pull complete
864317e3037e: Pull complete
6906631fde7a: Pull complete
92e20a11aeae: Pull complete
Digest: sha256:ee7641a7a5505a778eb8b4e6f77dcff7c50e2766d9999c59cedd9beadc030ada
Status: Downloaded newer image for wordpress:latest
2f75801633678589f14cca92c2920d278cf69cdcc2932c49400f4feb618a7495
[root@ip-172-31-3-66 ~]#





Go to browser 
http://13.127.91.50:81/


Database Name	wordpress
The name of the database you want to use with WordPress.

Username	username
Your database username.

Password	password
Your database password.

Database Host	localhost
You should be able to get this info from your web host, if localhost doesnâ€™t work.

Table Prefix	wp_
If you want to run multiple WordPress installations in a single database, change this.






YAML(configuration file)

Let assume we have 4 containers running in a server and server got down or hunged. Then 
In our yaml file we will going to write all the configuration setup.



In docker hub.
... via docker stack deploy or docker-compose

Example stack.yml for wordpress:
================================
version: '3.1'

services:

  wordpress:
    image: wordpress
    restart: always
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'



wordpress, db are the service names  


docker-compose.yaml or yml


[root@ip-172-31-3-66 ~]# mkdir wordpress
[root@ip-172-31-3-66 ~]# cd wordpress/
[root@ip-172-31-3-66 wordpress]# vi docker-compose.yaml
version: '3.1'

services:

  wordpress:
    image: wordpress
    restart: always
    ports:
      - 8080:80
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_USER: exampleuser
      WORDPRESS_DB_PASSWORD: examplepass
      WORDPRESS_DB_NAME: exampledb

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: exampledb
      MYSQL_USER: exampleuser
      MYSQL_PASSWORD: examplepass
      MYSQL_RANDOM_ROOT_PASSWORD: '1'

[root@ip-172-31-3-66 wordpress]# docker-compose up
-bash: docker-compose: command not found

For installations go always to official document
DOn't search in forums.


Search for docker compose install in linux
https://docs.docker.com/compose/install/

sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose



















[root@ip-172-31-3-66 wordpress]# docker-compose up

[root@ip-172-31-3-66 wordpress]# docker-compose up -d -f 'location of the yaml file'

# Here we have our yaml file in same location.

[root@ip-172-31-3-66 wordpress]# ls -lrt
-rw-r--r-- 1 root root 465 Jun 12 05:02 docker-compose.yaml

[root@ip-172-31-3-66 wordpress]# docker-compose up -d
Starting wordpress_db_1        ... done
Starting wordpress_wordpress_1 ... done

[root@ip-172-31-3-66 wordpress]# docker-compose



Home exercise
---------------
How to configure bamboo
how to do CI/CD in bamboo
