Unix Commands for practice
===========================
ls: listing files

If you want to see the list of files on your UNIX or Linux system, use the 'ls' command.
It shows the files /directories in your current directory.

$	ls -al
'ls -al' gives detailed information of the files. The command provides information in a columnar format. The columns contain the following information:

1st Column	File type and access permissions
2nd Column	# of HardLinks to the File
3rd Column	Owner and the creator of the file
4th Column	Group of the owner
5th Column	File size in Bytes
6th Column	Date and Time
7th Column	Directory or File name

You can use 'ls -R' to shows all the files not only in directories but also subdirectories 


Hidden items in UNIX/Linux begin with -Must Know Linux/Unix Commands at the start, of the file or directory.

Any Directory/file starting with a '.' will not be seen unless you request for it.  To view hidden files, use the command.

$	ls -a

-------------------------
cd: Change a dir


$ cd /etc
-------------------------
Creating & Viewing Files:

The 'cat' command is used to display text files. It can also be used for copying, combining and creating new text files.  Let's see how it works.

To create a new file, use the command

$	cat > filename
	Write some content
Press 'ctrl + d' to return to command prompt.
$

To view a file, use the command -
	cat filename

The syntax to combine 2 files is -

$	cat file1 file2 > newfilename 
-----------------
rm: Deleting Files

The 'rm' command removes files from the system without confirmation.

To remove a file use syntax -

$	rm filename
$	rm -f filename
$	rm -rf dir
-----------------
mv: Moving and Renaming files

$	mv filename new_file

-----------------
The 'man' command
Man stands for manual which is a reference book of a Linux operating system. It is similar to HELP file found in popular software.

To get help on any command that you do not understand, you can type 'man'

$	man tree
To come out press q
-----------------
The History Command
History command shows all the commands that you have used in the past for the current terminal session. This can help you refer to the old commands you have entered and re-used them in your operations again.

$	history
$	history 10 # will show last 10 commands
-----------------
The clear command
This command clears all the clutter on the terminal and gives you a clean window to work on, just like when you launch the terminal.
$	clear

-----------------
date:

-----------------

cal:

-----------------
echo:

-----------------
touch:

the touch command makes files. 
Just as you would make a .doc or a .txt using a PC desktop, the touch command makes empty files. An example of the touch command:

$	touch testfile.txt

-----------------
pwd: present working dir

$	pwd
-----------------
cp: Copy a files from source to destination

$	cp source_file dest_file
$	cp -a file1 file2
$	cp -R dir1  dir2
-----------------
grep: Search for a pattern in the file

$	grep 'word'  samplefile.txt

Ex:
$	cd /etc
$	grep ec2-user passwd
ec2-user:x:1000:1000:Cloud User:/home/ec2-user:/bin/bash

$ 	grep -v 'word'  samplefile.txt

$ 	grep -i 'word'  samplefile.txt

$ 	grep -c 'word'  samplefile.txt

$ 	grep -l 'word'  samplefile.txt

$ 	grep -r 'word'  dir

-----------------
wc: word count

$	wc file
$	wc -c file
$	wc -l file

-----------------
The find command: find the file from a location

$	find . -name "file.txt" -type f
$	find / -name "hostname" -type f 
$	find /etc -name "passwd" -type f -exec grep "ec2-user" {} \;

-----------------
head file

-----------------
tail file

-----------------
less file 

-----------------
more file

-----------------
cut

-----------------
sort

-----------------
uniq


-----------------
tree

-----------------
diff

-----------------
vimdiff

-----------------
ps

-----------------
top

-----------------
kill

-----------------
jobs

-----------------
bg

-----------------
fg

-----------------
ping

-----------------
df 

-----------------
du 

-----------------
free

-----------------
which

-----------------
locate

-----------------
gzip

-----------------
gunzip

-----------------
tar

-----------------
zip
unzip

bzip2
bunzip2
-----------------
wget

-----------------
curl

-----------------
chmod

-----------------
chgrp

-----------------
ssh

-----------------
scp

-----------------
sftp

-----------------
rsync

-----------------
netstat

-----------------
ifconfig

-----------------
ping

telnet

ftp

-----------------

Sudo:

Sudo program allows regular users to run programs with the security privileges of the superuser or root.

Sudo command will ask for password authentication. Though, you do not need to know the root password. You can supply your own password. After authentication, the system will invoke the requested command.

Sudo maintains a log of each command run. System administrators can trackback the person responsible for undesirable changes in the system.


$	sudo mv sample2 /home/quru99/Documents 
[sudo] password for guru99: ****

$	sudo -i

-----------------
Installing Software
In windows, the installation of a program is done by running the setup.exe file. The installation bundle contains the program as well various dependent components required to run the program correctly.

In Linux/UNIX, installation files are distributed as packages. But the package contains only the program itself. Any dependent components will have to be installed separately which are usually available as packages themselves.

You can use the 'yum' commands to install or remove a package. Let's update all the installed packages in our system using command 

$	sudo yum install httpd 

-----------------
Sending E-mails
For sending mails through a terminal, you will need to install packages 'mailutils'.

The command syntax is 
$ 	mail -s 'subject' -c 'cc-address' -b 'bcc-address' 'to-address'
-----------------
Sqlplus connection


