7th Class (Dt: 28 May 2019)
---------------------------
Continuation of prev class on maven:

mvn validate

mvn clean

mvn compile

mvn compile test

mvn package
--It will do all above activities and stores in a target dir

mvn install
--It will do all above activities and stores in a target dir. It will store the genrated artifacts into ~/.m2 folder.

[INFO] Installing /opt/my_maven_proj/simple-java-maven-app/pom.xml to /root/.m2/repository/com/mycompany/app/my-new-app/1.0-SNAPSHOT/my-new-app-1.0-SNAPSHOT.pom
 
mvn deploy

If someone ask in the interview what is maven lifecycle.

https://maven.apache.org/guides/introduction/introduction-to-the-lifecycle.html

A Build Lifecycle is made up of Phases
Each of these build lifecycles is defined by a different list of build phases, wherein a build phase represents a stage in the lifecycle.

For example, the default lifecycle comprises of the following phases (for a complete list of the lifecycle phases, refer to the Lifecycle Reference):

-> validate - validate the project is correct and all necessary information is available

-> compile  - compile the source code of the project

-> test 	 - test the compiled source code using a suitable unit testing framework. These tests should not require the code be packaged or deployed

-> package  - take the compiled code and package it in its distributable format, such as a JAR.

-> verify   - run any checks on results of integration tests to ensure quality criteria are met

-> install  - install the package into the local repository, for use as a dependency in other projects locally

-> deploy   - done in the build environment, copies the final package to the remote repository for sharing with other developers and projects.

These lifecycle phases (plus the other lifecycle phases not shown here) are executed sequentially to complete the default lifecycle. Given the lifecycle phases above, this means that when the default lifecycle is used, Maven will first validate the project, then will try to compile the sources, run those against the tests, package the binaries (e.g. jar), run integration tests against that package, verify the integration tests, install the verified package to the local repository, then deploy the installed package to a remote repository.


=============================Practice==============================
Open Github.com
search in github "sample maven java project"

Copy the clone link: https://github.com/gabrielf/maven-samples.git

[root@ip-172-31-2-130 maven-samples]# pwd
/opt/my_maven_proj/maven-samples

[root@ip-172-31-2-130 my_maven_proj]# git clone https://github.com/gabrielf/maven-samples.git


[root@ip-172-31-2-130 maven-samples]# tree

[root@ip-172-31-2-130 maven-samples]# mvn package

[root@ip-172-31-2-130 maven-samples]# tree

[root@ip-172-31-2-130 maven-samples]# mvn install

[INFO] --- maven-install-plugin:2.4:install (default-install) @ parent ---
[INFO] Installing /opt/my_maven_proj/maven-samples/pom.xml to /root/.m2/repository/com/example/maven-samples/parent/1.0-SNAPSHOT/parent-1.0-SNAPSHOT.pom


[INFO] Reactor Summary for Parent 1.0-SNAPSHOT:
[INFO]
[INFO] Multi Module Project Parent ........................ SUCCESS [  4.105 s]
[INFO] Server ............................................. SUCCESS [  1.724 s]
[INFO] Webapp ............................................. SUCCESS [  0.865 s]
[INFO] A Single Maven Module .............................. SUCCESS [  0.534 s]
[INFO] Parent ............................................. SUCCESS [  0.005 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS


[root@ip-172-31-2-130 maven-samples]# mvn deploy
[INFO] Multi Module Project Parent ........................ FAILURE [  2.706 s]
[INFO] Server ............................................. SKIPPED
[INFO] Webapp ............................................. SKIPPED
[INFO] A Single Maven Module .............................. SKIPPED
[INFO] Parent ............................................. SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  3.051 s
[INFO] Finished at: 2019-05-28T04:40:20Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-deploy-plugin:2.7:deploy (default-deploy) on project multi-module-parent: Deployment failed: repository element was not specified in the POM inside distributionManagement element or in -DaltDeploymentRepository=id::layout::url parameter -> [Help 1]


Note: It got failed because we don't have 3rd party artifact tool (Ex: Nexus) not configured in pom.xml file, where 'mvn deploy' cmd will save the artifacts to 3rd party tool. It would be configured in POM.xml

Nexus is another tool which stores different artifacts.



  156  git clone https://github.com/jabedhasan21/java-hello-world-with-maven.git
  158  cd java-hello-world-with-maven/
  160  vi pom.xml
  161  tree
  162  mvn validate
  163  mvn clean
  164  tree
  165  mvn compile
  166  tree
  167  mvn compile test
  168  tree
  169  mvn package
  170  mvn install

